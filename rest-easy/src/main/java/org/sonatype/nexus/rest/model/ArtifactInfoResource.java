/*
 * Copyright (C) 2012 Pieter van der Meer (pieter(at)elucidator.nl)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Enunciate
package org.sonatype.nexus.rest.model;

/**
 *  Details about the requested item, that should be useful in
 *  finding how the item was retrieved.
 *        
 *  
 *  @version $Revision$ $Date$
 */
@javax.xml.bind.annotation.XmlType (
  name = "artifact-info-resource",
  namespace = ""
)
public class ArtifactInfoResource implements java.io.Serializable {

  private boolean _presentLocally;
  private java.lang.String _repositoryId;
  private java.lang.String _repositoryName;
  private java.lang.String _repositoryPath;
  private java.lang.String _mimeType;
  private java.lang.String _uploader;
  private long _uploaded;
  private long _lastChanged;
  private long _size;
  private java.lang.String _sha1Hash;
  private java.lang.String _md5Hash;
  private java.util.List<org.sonatype.nexus.rest.model.RepositoryUrlResource> _repositories;
  private boolean _canDelete;

  /**
   * The flag that marks item as locally present (hosted/cached).
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "presentLocally",
    namespace = ""
  )
  public boolean getPresentLocally() {
    return this._presentLocally;
  }

  /**
   * The flag that marks item as locally present (hosted/cached).
   */
  public void setPresentLocally(boolean _presentLocally) {
    this._presentLocally = _presentLocally;
  }

  /**
   * The repository where the artifact is stored.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "repositoryId",
    namespace = ""
  )
  public java.lang.String getRepositoryId() {
    return this._repositoryId;
  }

  /**
   * The repository where the artifact is stored.
   */
  public void setRepositoryId(java.lang.String _repositoryId) {
    this._repositoryId = _repositoryId;
  }

  /**
   * The repository name where the artifact is stored.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "repositoryName",
    namespace = ""
  )
  public java.lang.String getRepositoryName() {
    return this._repositoryName;
  }

  /**
   * The repository name where the artifact is stored.
   */
  public void setRepositoryName(java.lang.String _repositoryName) {
    this._repositoryName = _repositoryName;
  }

  /**
   * The path in repository where the artifact is stored.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "repositoryPath",
    namespace = ""
  )
  public java.lang.String getRepositoryPath() {
    return this._repositoryPath;
  }

  /**
   * The path in repository where the artifact is stored.
   */
  public void setRepositoryPath(java.lang.String _repositoryPath) {
    this._repositoryPath = _repositoryPath;
  }

  /**
   * The MIME type of the artifact.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "mimeType",
    namespace = ""
  )
  public java.lang.String getMimeType() {
    return this._mimeType;
  }

  /**
   * The MIME type of the artifact.
   */
  public void setMimeType(java.lang.String _mimeType) {
    this._mimeType = _mimeType;
  }

  /**
   * User id that uploaded the artifact.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "uploader",
    namespace = ""
  )
  public java.lang.String getUploader() {
    return this._uploader;
  }

  /**
   * User id that uploaded the artifact.
   */
  public void setUploader(java.lang.String _uploader) {
    this._uploader = _uploader;
  }

  /**
   * When the artifact was uploaded.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "uploaded",
    namespace = ""
  )
  public long getUploaded() {
    return this._uploaded;
  }

  /**
   * When the artifact was uploaded.
   */
  public void setUploaded(long _uploaded) {
    this._uploaded = _uploaded;
  }

  /**
   * When the artifact was changed for the last time.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "lastChanged",
    namespace = ""
  )
  public long getLastChanged() {
    return this._lastChanged;
  }

  /**
   * When the artifact was changed for the last time.
   */
  public void setLastChanged(long _lastChanged) {
    this._lastChanged = _lastChanged;
  }

  /**
   * Artifact size on disk.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "size",
    namespace = ""
  )
  public long getSize() {
    return this._size;
  }

  /**
   * Artifact size on disk.
   */
  public void setSize(long _size) {
    this._size = _size;
  }

  /**
   * Sha1 Hash.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "sha1Hash",
    namespace = ""
  )
  public java.lang.String getSha1Hash() {
    return this._sha1Hash;
  }

  /**
   * Sha1 Hash.
   */
  public void setSha1Hash(java.lang.String _sha1Hash) {
    this._sha1Hash = _sha1Hash;
  }

  /**
   * Md5 Hash.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "md5Hash",
    namespace = ""
  )
  public java.lang.String getMd5Hash() {
    return this._md5Hash;
  }

  /**
   * Md5 Hash.
   */
  public void setMd5Hash(java.lang.String _md5Hash) {
    this._md5Hash = _md5Hash;
  }

  /**
   * Field repositories.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "repositories",
    namespace = ""
  )
  @javax.xml.bind.annotation.XmlElementWrapper (
    name = "data",
    namespace = ""
  )
  public java.util.List<org.sonatype.nexus.rest.model.RepositoryUrlResource> getRepositories() {
    return this._repositories;
  }

  /**
   * Field repositories.
   */
  public void setRepositories(java.util.List<org.sonatype.nexus.rest.model.RepositoryUrlResource> _repositories) {
    this._repositories = _repositories;
  }

  /**
   * Informs if current user has what is needed to delete this
   * artifact.
   */
  @javax.xml.bind.annotation.XmlElement (
    name = "canDelete",
    namespace = ""
  )
  public boolean getCanDelete() {
    return this._canDelete;
  }

  /**
   * Informs if current user has what is needed to delete this
   * artifact.
   */
  public void setCanDelete(boolean _canDelete) {
    this._canDelete = _canDelete;
  }

}
